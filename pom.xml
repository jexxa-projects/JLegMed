<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.jexxa.jlegmed</groupId>
  <artifactId>jlegmed</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <!-- Project Information -->
  <name>JLegMed</name>
  <url>https://github.com/jexxa-projects/JLegMed</url>

  <description>JLegMed - Connect the Past with the Future </description>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Michael Repplinger</name>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/jexxa-projects/JLegMed.git</connection>
    <url>https://github.com/jexxa-projects/JLegMed</url>
    <developerConnection>scm:git:https://github.com/jexxa-projects/JLegMed.git</developerConnection>
    <tag>jlegmed-0.6.0</tag>
  </scm>

  <properties>
    <!-- target/compiler configuration  -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>

    <!-- version of core dependencies -->
    <jexxa.common.adapters.version>1.0.0</jexxa.common.adapters.version>

    <!-- version of dependencies -->
    <unirest.java.version>3.14.5</unirest.java.version>


    <!-- version of test dependencies -->
    <junit.platform.launcher.version>1.10.1</junit.platform.launcher.version>
    <junit.jupiter.engine.version>5.10.1</junit.jupiter.engine.version>
    <junit.jupiter.params.version>5.10.1</junit.jupiter.params.version>
    <awaitility.version>4.2.0</awaitility.version>
    <jackson.databind.version>2.16.0</jackson.databind.version>
    <apache.commons.lang3>3.14.0</apache.commons.lang3>
    <activemq.artemis.client.version>2.31.2</activemq.artemis.client.version>
    <postgres.version>42.7.1</postgres.version>
    <slf4j.simple.version>2.0.9</slf4j.simple.version>
    <javalin.version>5.6.3</javalin.version>



    <!-- server-name used in mavens settings.xml to find to your repository credentials -->
    <project.scm.id>github</project.scm.id>

    <!--information for filtered sources  -->
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>

    <!--version of  maven plugins  -->
    <gpg.plugin.version>3.1.0</gpg.plugin.version>
    <maven.clean.plugin>3.3.2</maven.clean.plugin>
    <maven.compiler.plugin>3.12.0</maven.compiler.plugin>
    <maven.deploy.plugin>3.1.1</maven.deploy.plugin>
    <maven.failsafe.plugin>3.2.3</maven.failsafe.plugin>
    <maven.install.plugin>3.1.1</maven.install.plugin>
    <maven.jar.plugin>3.3.0</maven.jar.plugin>
    <maven.resources.plugin>3.3.1</maven.resources.plugin>
    <maven.site.plugin>3.12.1</maven.site.plugin>
    <maven.surefire.plugin>3.2.3</maven.surefire.plugin>
    <maven.release.plugin>3.0.1</maven.release.plugin>
    <maven.jacoco.plugin>0.8.11</maven.jacoco.plugin>
    <maven.reports.plugin>3.5.0</maven.reports.plugin>
    <maven.enforcer.plugin>3.4.1</maven.enforcer.plugin>
    <maven.javadoc.plugin>3.6.3</maven.javadoc.plugin>
    <maven.versions.plugin>2.16.2</maven.versions.plugin>
    <maven.build.helper.version>3.4.0</maven.build.helper.version>
    <maven.shade.plugin>3.5.1</maven.shade.plugin>
    <maven.templating.plugin>3.0.0</maven.templating.plugin>

    <!-- sonar configuration  -->
    <sonar.organization>jexxa-projects</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
    <sonar.token>${sonar-login}</sonar.token>
    <sonar.projectKey>jexxa-projects_JLegMed</sonar.projectKey>
    <sonar.java.source>1.17</sonar.java.source>
    <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco-ut/jacoco.xml,target/site/jacoco-it/jacoco.xml </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.java.libraries>target</sonar.java.libraries>
    <argLine>-Xmx2048m -Xms1024m</argLine>

  </properties>

  <dependencies>
    <!-- dependencies for library -->
    <dependency>
      <groupId>io.jexxa.common</groupId>
      <artifactId>common-adapters</artifactId>
      <version>${jexxa.common.adapters.version}</version>
    </dependency>

    <dependency>
      <groupId>com.konghq</groupId>
      <artifactId>unirest-java</artifactId>
      <version>${unirest.java.version}</version>

      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>



    <!-- dependencies for tests -->
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility-groovy</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache.commons.lang3}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit.platform.launcher.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.simple.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.engine.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.params.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <version>${maven.jacoco.plugin}</version>
      <scope>test</scope>
    </dependency>

    <!-- dependencies for tests with JDBCAdapter -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgres.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- dependencies for tests with ActiveMQ -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>artemis-jms-client</artifactId>
      <version>${activemq.artemis.client.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- dependencies test -->
    <dependency>
      <groupId>io.javalin</groupId>
      <artifactId>javalin</artifactId>
      <version>${javalin.version}</version>
      <scope>test</scope>
      <!-- Manual fix for sec issue in 11.0.15 introduced by javalin -->
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-xml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Manual fix for sec issue in 11.0.15 introduced by javalin -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-xml</artifactId>
      <version>11.0.16</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (maybe moved to parent pom) -->
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>templating-maven-plugin</artifactId>
          <version>${maven.templating.plugin}</version>
        </plugin>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.plugin}</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven.failsafe.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.reports.plugin}</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${maven.jacoco.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${gpg.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${maven.versions.plugin}</version>
          <configuration>
            <!--suppress UnresolvedMavenProperty -->
            <rulesUri>file:///${session.executionRootDirectory}/mavenVersionRules.xml</rulesUri>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>



    <!-- Plugin specific configuration -->
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>templating-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-src</id>
            <goals>
              <goal>filter-sources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>testCompile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <!-- Property failsafeArgLine is set from failsafe plugin-->
          <argLine>${failsafeArgLine}</argLine>
        </configuration>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--suppress UnresolvedMavenProperty -->
          <!-- Property surefireArgLine wird vom maven-surefire-plugin gesetzt-->
          <argLine>${surefireArgLine}</argLine>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <releaseProfiles>sign-artifacts</releaseProfiles>
          <arguments>-Psign-artifacts</arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin}</version>
        <configuration>
          <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          <tags>
            <tag>
              <name>pre</name>
              <placement>mc</placement>
              <head>Preconditions:</head>
            </tag>
            <tag>
              <name>post</name>
              <placement>mc</placement>
              <head>Postconditions:</head>
            </tag>
            <tag>
              <name>inv</name>
              <placement>t</placement>
              <head>Invariants:</head>
            </tag>
            <tag>
              <name>startuml</name>
              <placement>t</placement>
              <head>Plantuml:</head>
            </tag>
            <tag>
              <name>enduml</name>
              <placement>t</placement>
              <head>Plantuml:</head>
            </tag>
            <tag>
              <name>Optional</name>
              <placement>t</placement>
              <head>Plantuml-Optional:</head>
            </tag>
          </tags>
          <additionalOptions>-Xdoclint:none -Xdoclint:-missing</additionalOptions>
          <additionalJOptions>
            <additionalJOption>-Xdoclint:none</additionalJOption>
            <additionalJOption>-Xdoclint:-missing</additionalJOption>
          </additionalJOptions>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${gpg.plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>deploy</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>jks</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <id>sign-artifacts</id>
      <activation>
        <property>
          <name>sign</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${gpg.plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>integrationTests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.failsafe.plugin}</version>
            <configuration>
              <!--suppress UnresolvedMavenProperty -->
              <!-- Property surefireArgLine wird vom maven-failsafe-plugin gesetzt-->
              <argLine>${failsafeArgLine}</argLine>
              <shutdown>kill</shutdown>

            </configuration>
            <executions>
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${maven.jacoco.plugin}</version>
            <executions>
              <!--
                  Prepares the property pointing to the JaCoCo runtime agent which
                  is passed as VM argument when Maven the Surefire plugin is executed.
              -->
              <execution>
                <id>pre-unit-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                  <!--
                      Sets the name of the property containing the settings
                      for JaCoCo runtime agent.
                  -->
                  <propertyName>surefireArgLine</propertyName>
                </configuration>
              </execution>
              <!--
                  Ensures that the code coverage report for unit tests is created after
                  unit tests have been run.
              -->
              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                </configuration>
              </execution>

              <execution>
                <id>pre-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                  <!--
                      Sets the name of the property containing the settings
                      for JaCoCo runtime agent.
                  -->
                  <propertyName>failsafeArgLine</propertyName>
                </configuration>
              </execution>
              <!--
                  Ensures that the code coverage report for integration tests after
                  integration tests have been run.
              -->
              <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test-report</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>merge-results</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}/coverage-reports</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/coverage-reports/jacoco-aggregate.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-merge-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/coverage-reports/jacoco-aggregate.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>


        </plugins>
      </build>
    </profile>
  </profiles>
  <distributionManagement>
    <snapshotRepository>
      <id>oss.sonatype.org</id>
      <name>JLegMed snapshot</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <uniqueVersion>true</uniqueVersion>
    </snapshotRepository>
    <repository>
      <id>oss.sonatype.org</id>
      <name>Jexxa Maven Packages</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
      <uniqueVersion>true</uniqueVersion>
    </repository>
  </distributionManagement>

  <modules>
    <module>jlegmed-core</module>
  </modules>
</project>
